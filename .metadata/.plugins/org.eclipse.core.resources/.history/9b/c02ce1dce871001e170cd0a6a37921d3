package dataman;

import javax.swing.*;
import java.awt.*;
import java.awt.event.*;

public class DatamanGUI {

    private JFrame frame;
    private JTextField display;
    private JPanel mainPanel, lightPanel;
    private JButton powerButton, equalsButton;
    private JLabel greenLight, redLight;
    private JButton[] numberButtons;
    private JButton addButton, subtractButton, multiplyButton, divideButton;

    public DatamanGUI() {
        frame = new JFrame("Dataman Math Game");
        frame.setSize(400, 500);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setLayout(new BorderLayout());

        // Setup the display
        display = new JTextField();
        display.setEditable(false);
        frame.add(display, BorderLayout.NORTH);

        // Setup the main panel with buttons
        mainPanel = new JPanel(new GridLayout(6, 4));  // Assuming a grid layout for 24 buttons

        // Power and equals buttons
        powerButton = new JButton("Power");
        equalsButton = new JButton("=");

        // Math operations buttons
        addButton = new JButton("+");
        subtractButton = new JButton("-");
        multiplyButton = new JButton("x");
        divideButton = new JButton("รท");

        // Number buttons
        numberButtons = new JButton[10];
        for (int i = 0; i < 10; i++) {
            numberButtons[i] = new JButton(String.valueOf(i));
            // Add action listeners to these buttons if needed
            final int num = i;  // For use in lambda
            numberButtons[i].addActionListener(e -> display.append(String.valueOf(num)));
            mainPanel.add(numberButtons[i]);
        }

        // Add all the buttons to mainPanel
        mainPanel.add(powerButton);
        mainPanel.add(equalsButton);
        mainPanel.add(addButton);
        mainPanel.add(subtractButton);
        mainPanel.add(multiplyButton);
        mainPanel.add(divideButton);
        // ... add other buttons as required

        frame.add(mainPanel, BorderLayout.CENTER);

        // Setup light indicators
        lightPanel = new JPanel();
        greenLight = new JLabel("    ");  // Placeholder for Green light
        greenLight.setOpaque(true);
        greenLight.setBackground(Color.GRAY);  // Default color

        redLight = new JLabel("    ");  // Placeholder for Red light
        redLight.setOpaque(true);
        redLight.setBackground(Color.GRAY);  // Default color

        lightPanel.add(new JLabel("Green: "));
        lightPanel.add(greenLight);
        lightPanel.add(new JLabel("Red: "));
        lightPanel.add(redLight);

        frame.add(lightPanel, BorderLayout.SOUTH);

        // Add action listeners
        powerButton.addActionListener(e -> turnOn());

        frame.setVisible(true);
    }

    private void turnOn() {
        display.setText("=");
        // Reset lights
        greenLight.setBackground(Color.GRAY);
        redLight.setBackground(Color.GRAY);
        // ... other initialization code
    }

    // Add more methods for other functionalities like checking answers, handling other button presses, etc.

    public static void main(String[] args) {
        SwingUtilities.invokeLater(() -> new DatamanGUI());
    }
}
